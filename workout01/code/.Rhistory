ggplot(data = points_salary, aes(x = median_salary, y = median_points)) +
geom_point(stat="identity", aes(color = cost_point)) +
scale_color_continuous() +
labs(title = "NBA Median Salary and Median Points by Team", x = "Median Salary (in millions)", y = "Median Points")
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) +
geom_point(stat="identity", aes(size = cost_point)) +
scale_color_continuous() +
labs(title = "NBA Median Salary and Median Points by Team", x = "Median Salary (in millions)", y = "Median Points")
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) +
geom_point(stat="identity", aes(size = cost_point, color = team)) +
scale_color_continuous() +
labs(title = "NBA Median Salary and Median Points by Team", x = "Median Salary (in millions)", y = "Median Points")
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) +
geom_point(stat="identity", aes(size = cost_point), aes(color = team)) +
scale_color_continuous() +
labs(title = "NBA Median Salary and Median Points by Team", x = "Median Salary (in millions)", y = "Median Points")
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) +
geom_point(stat="identity", aes(size = team)) +
scale_color_continuous() +
labs(title = "NBA Median Salary and Median Points by Team", x = "Median Salary (in millions)", y = "Median Points")
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) +
geom_point(stat="identity", aes(size = cost_point)) +
scale_color_continuous() +
labs(title = "NBA Median Salary and Median Points by Team", x = "Median Salary (in millions)", y = "Median Points")
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) +
geom_point(stat="identity", aes(size = cost_point, color = team)) +
scale_color_continuous() +
labs(title = "NBA Median Salary and Median Points by Team", x = "Median Salary (in millions)", y = "Median Points")
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) +
geom_point(stat="identity", aes(size = cost_point, color = team)) +
ggtitle(title = "NBA Median Salary and Median Points by Team") + xlab("Median Salary (in millions)") + ylab("Median Points")
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) +
geom_point(stat="identity", aes(size = cost_point, color = team)) +
ggtitle("NBA Median Salary and Median Points by Team") + xlab("Median Salary (in millions)") + ylab("Median Points")
#f
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) +
geom_point(stat="identity", aes(size = cost_point, color = team)) +
ggtitle("Median Salary vs Median Points by Team") + xlab("Median Salary (in millions)") + ylab("Median Points")
#f
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) +
geom_point(stat="identity", aes(size = cost_point, color = team)) +
ggtitle("Median Salary vs Median Points by Team") + xlab("Median Salary (in millions of $)") + ylab("Median Points")
#f
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) +
geom_point(stat="identity", aes(size = cost_point, name = "Cost/Point" color = team)) +
#f
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) +
geom_point(stat="identity", aes(size = cost_point, name = "Cost/Point", color = team)) +
ggtitle("Median Salary vs Median Points by Team") + xlab("Median Salary (in millions of $)") + ylab("Median Points")
#f
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) +
geom_point(stat="identity", aes(size = cost_point, color = team, name = "Cost/Point")) +
ggtitle("Median Salary vs Median Points by Team") + xlab("Median Salary (in millions of $)") + ylab("Median Points")
#f
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) +
geom_point(stat="identity", aes(size = cost_point, color = team)) +
ggtitle("Median Salary vs Median Points by Team") + xlab("Median Salary (in millions of $)") + ylab("Median Points")
# a) Scatter Plot
plot(abalone$Sex)
tail(abalone)
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data"
abalone <- read.table(url, sep = ",")
head(abalone)
tail(abalone)
str(abalone, vec.len = 1)
column_names <- c("Sex", "Length", "Diameter", "Height", "Whole", "Shucked", "Viscera", "Shell", "Rings")
column_types <- c("character", "real", "real", "real", "real", "real", "real", "real", "integer")
abalone <- read.table(url, sep = ",", col.names = column_names, colClasses = column_types)
str(abalone, vec.len = 1)
abalone2 <- read.csv(url, header = FALSE)
str(abalone2, vec.len = 1)
abalone10 <- read.table(url, sep = ",", col.names = column_names, colClasses = column_types, nrows = 10)
str(abalone10, vec.len = 1)
abalone20 <- read.table(url, sep = ",", col.names = column_names, colClasses = column_types, nrows = 10, skip = 10)
str(abalone20, vec.len = 1)
summary(abalone)
head(abalone)
tail(abalone)
dim(abalone)
names(abalone)
colnames(abalone)
nrow(abalone)
ncol(abalone)
# a) When you specify a column as NULL in colClasses, the column is skipped.
rows <- c("Min", "Max", "Mean", "SD")
mins <- c(min(abalone[,2]), min(abalone[,3]), min(abalone[,4]), min(abalone[,5]), min(abalone[,6]), min(abalone[,7]), min(abalone[,8]), min(abalone[,9]))
maxes <- c(max(abalone[,2]), max(abalone[,3]), max(abalone[,4]), max(abalone[,5]), max(abalone[,6]), max(abalone[,7]), max(abalone[,8]), max(abalone[,9]))
means <- c(mean(abalone[,2]), mean(abalone[,3]), mean(abalone[,4]), mean(abalone[,5]), mean(abalone[,6]), mean(abalone[,7]), mean(abalone[,8]), mean(abalone[,9]))
SDs <- sapply(abalone, sd, na.rm = TRUE)
SDs
lens <- c(min(abalone[,2]), max(abalone[,2]), mean(abalone[,2]), SDs[2])
diams <- c(min(abalone[,3]), max(abalone[,3]), mean(abalone[,3]), SDs[3])
heights <- c(min(abalone[,4]), max(abalone[,4]), mean(abalone[,4]), SDs[4])
wholes <- c(min(abalone[,5]), max(abalone[,5]), mean(abalone[,5]), SDs[5])
shucks <- c(min(abalone[,6]), max(abalone[,6]), mean(abalone[,6]), SDs[6])
viscersas <- c(min(abalone[,7]), max(abalone[,7]), mean(abalone[,7]), SDs[7])
shells <- c(min(abalone[,8]), max(abalone[,8]), mean(abalone[,8]), SDs[8])
rings <- c(min(abalone[,9]), max(abalone[,9]), mean(abalone[,9]), SDs[9])
data <- data.frame("Length" = lens, "Diam" = diams, "Height" = heights, "Whole" = wholes, "Shucked" = shucks, "Viscera" = viscersas, "Shell" = shells, "Rings" = rings, row_names = rows)
data
abalone[1:5,]
abalone[seq(from = 5, to = 50, by = 5),]
abalone[seq(from = length(abalone[[1]]), to = length(abalone[[1]]) - 5, by = -1),]
colnames(abalone)
height14 <- data.frame(abalone[abalone[["Height"]] < 0.14,])
dim(height14)
infant <- data.frame(abalone[abalone[["Sex"]] == 'I',])
dim(infant)
male_female <- data.frame(abalone[abalone[["Sex"]] == 'M' | abalone[["Sex"]] == 'F',])
dim(male_female)
data.frame(abalone[abalone[["Rings"]] > 25, c(1, 9)])
data.frame(abalone[abalone[["Sex"]] == 'I' & abalone[["Rings"]] > 3 & abalone[["Rings"]] < 6, c(1,3,9)])
abies <- abalone[abalone$Sex == 'I', c('Length', 'Height', 'Diameter', 'Whole', 'Shucked')]
abies$product <- abies$Whole * abies$Shucked
abies3 <- data.frame("log_height" = log(abies$Height), "log_length" = log(abies$Length))
filtered <- abalone[abalone[["Height"]] < 0.12,]
ordered <- filtered[order(filtered$Height, decreasing = FALSE),]
ordered2 <- abalone[order(abalone$Height, decreasing = TRUE),]
data.frame("Sex" = ordered2[1:5, 1], "Diameter" = ordered2[1:5, 3], "Rings" = ordered2[1:5, 9])
ordered3 <- abalone[order(abalone$Length, decreasing = TRUE),]
data.frame("Sex" = ordered3[1:5, 1], "Diameter" = ordered3[1:5, 3], "Rings" = ordered3[1:5, 9])
# a) Scatter Plot
plot(abalone$Sex)
plot(abalone$Height)
plot(abalone$Sex)
plot(abalone$Sex)
plot(abalone$Sex, y)
plot.default(abalone$Sex)
plot(Sex ~ group, data=abalone)
plot(Sex, data=abalone)
plot(abalone$Sex, axes = FALSE, main = "no axes")
plot(x=abalone$Sex)
plot(abalone$Sex)
plot(abalone$Sex)
View(abalone)
column_types <- c("factor", "real", "real", "real", "real", "real", "real", "real", "integer")
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data"
abalone <- read.table(url, sep = ",")
head(abalone)
tail(abalone)
str(abalone, vec.len = 1)
column_names <- c("Sex", "Length", "Diameter", "Height", "Whole", "Shucked", "Viscera", "Shell", "Rings")
column_types <- c("factor", "real", "real", "real", "real", "real", "real", "real", "integer")
abalone <- read.table(url, sep = ",", col.names = column_names, colClasses = column_types)
str(abalone, vec.len = 1)
abalone2 <- read.csv(url, header = FALSE)
str(abalone2, vec.len = 1)
abalone10 <- read.table(url, sep = ",", col.names = column_names, colClasses = column_types, nrows = 10)
str(abalone10, vec.len = 1)
abalone20 <- read.table(url, sep = ",", col.names = column_names, colClasses = column_types, nrows = 10, skip = 10)
str(abalone20, vec.len = 1)
summary(abalone)
head(abalone)
tail(abalone)
dim(abalone)
names(abalone)
colnames(abalone)
nrow(abalone)
ncol(abalone)
# a) When you specify a column as NULL in colClasses, the column is skipped.
rows <- c("Min", "Max", "Mean", "SD")
mins <- c(min(abalone[,2]), min(abalone[,3]), min(abalone[,4]), min(abalone[,5]), min(abalone[,6]), min(abalone[,7]), min(abalone[,8]), min(abalone[,9]))
maxes <- c(max(abalone[,2]), max(abalone[,3]), max(abalone[,4]), max(abalone[,5]), max(abalone[,6]), max(abalone[,7]), max(abalone[,8]), max(abalone[,9]))
means <- c(mean(abalone[,2]), mean(abalone[,3]), mean(abalone[,4]), mean(abalone[,5]), mean(abalone[,6]), mean(abalone[,7]), mean(abalone[,8]), mean(abalone[,9]))
SDs <- sapply(abalone, sd, na.rm = TRUE)
SDs
lens <- c(min(abalone[,2]), max(abalone[,2]), mean(abalone[,2]), SDs[2])
diams <- c(min(abalone[,3]), max(abalone[,3]), mean(abalone[,3]), SDs[3])
heights <- c(min(abalone[,4]), max(abalone[,4]), mean(abalone[,4]), SDs[4])
wholes <- c(min(abalone[,5]), max(abalone[,5]), mean(abalone[,5]), SDs[5])
shucks <- c(min(abalone[,6]), max(abalone[,6]), mean(abalone[,6]), SDs[6])
viscersas <- c(min(abalone[,7]), max(abalone[,7]), mean(abalone[,7]), SDs[7])
shells <- c(min(abalone[,8]), max(abalone[,8]), mean(abalone[,8]), SDs[8])
rings <- c(min(abalone[,9]), max(abalone[,9]), mean(abalone[,9]), SDs[9])
data <- data.frame("Length" = lens, "Diam" = diams, "Height" = heights, "Whole" = wholes, "Shucked" = shucks, "Viscera" = viscersas, "Shell" = shells, "Rings" = rings, row_names = rows)
data
abalone[1:5,]
abalone[seq(from = 5, to = 50, by = 5),]
abalone[seq(from = length(abalone[[1]]), to = length(abalone[[1]]) - 5, by = -1),]
colnames(abalone)
height14 <- data.frame(abalone[abalone[["Height"]] < 0.14,])
dim(height14)
infant <- data.frame(abalone[abalone[["Sex"]] == 'I',])
dim(infant)
male_female <- data.frame(abalone[abalone[["Sex"]] == 'M' | abalone[["Sex"]] == 'F',])
dim(male_female)
data.frame(abalone[abalone[["Rings"]] > 25, c(1, 9)])
data.frame(abalone[abalone[["Sex"]] == 'I' & abalone[["Rings"]] > 3 & abalone[["Rings"]] < 6, c(1,3,9)])
abies <- abalone[abalone$Sex == 'I', c('Length', 'Height', 'Diameter', 'Whole', 'Shucked')]
abies$product <- abies$Whole * abies$Shucked
abies3 <- data.frame("log_height" = log(abies$Height), "log_length" = log(abies$Length))
filtered <- abalone[abalone[["Height"]] < 0.12,]
ordered <- filtered[order(filtered$Height, decreasing = FALSE),]
ordered2 <- abalone[order(abalone$Height, decreasing = TRUE),]
data.frame("Sex" = ordered2[1:5, 1], "Diameter" = ordered2[1:5, 3], "Rings" = ordered2[1:5, 9])
ordered3 <- abalone[order(abalone$Length, decreasing = TRUE),]
data.frame("Sex" = ordered3[1:5, 1], "Diameter" = ordered3[1:5, 3], "Rings" = ordered3[1:5, 9])
plot(abalone$Height)
# a) Scatter Plot
plot(abalone$Sex)
# b) Bar Plot
plot(abalone$Height, abalone$Length)
plot(data.frame("L" = lens, "H" = heights))
# c) Scatter Plot
plot(data.frame("L" = lens, "H" = heights, "D" = diams))
# d) Scatter Plot
plot(data.frame(abalone$Sex, abalone$Length))
# e) Scatter Plot Matrix
plot(data.frame(abalone$Length, abalone$Sex))
# f) Box Plot
plot(data.frame(abalone$Sex, abalone$Length))
# g) Scatter Plot
plot(data.frame(abalone$Length, abalone$Sex))
plot.default(abalone$Length, abalone$Height, pch = "*", xlab = "Length", ylab = "Height", main = "Length vs. Height")
a <- c(1,2,3,4,5,6,7,8,9)
a <- c(1,2,3,4,5,6,7,8,9,10,11,12)
a <- matrix(a, nrows=3, ncols=4)
a <- matrix(a, nrows=3, ncols=4)
a <- matrix(a, nrow=3, ncol=4)
A
a
a[1, 2]
a[2,3]
a <- list(c(1,2,3), c(2,3,4))
a
typeof(a)
typeof(a[1])
a[1]
a[[1]]
typeof(a[[1]])
a[[1]]
a[[2]]
typeof(a[[2]])
steph <- read.csv("../data/stephen-curry.csv", stringsAsFactors = FALSE)
klay <- read.csv("../data/klay-thompson.csv", stringsAsFactors = FALSE)
andre <- read.csv("../data/andre-iguodala.csv", stringsAsFactors = FALSE)
kevin <- read.csv("../data/kevin-durant.csv", stringsAsFactors = FALSE)
draymond <- read.csv("../data/draymond-green.csv", stringsAsFactors = FALSE)
steph$name <- "Stephen Curry"
klay$name <- "Klay Thompson"
andre$name <- "Andre Iguodala"
kevin$name <- "Kevin Durant"
dramond$name <- "Draymond Green"
steph <- read.csv("../data/stephen-curry.csv", stringsAsFactors = FALSE)
klay <- read.csv("../data/klay-thompson.csv", stringsAsFactors = FALSE)
andre <- read.csv("../data/andre-iguodala.csv", stringsAsFactors = FALSE)
kevin <- read.csv("../data/kevin-durant.csv", stringsAsFactors = FALSE)
draymond <- read.csv("../data/draymond-green.csv", stringsAsFactors = FALSE)
steph$name <- "Stephen Curry"
klay$name <- "Klay Thompson"
andre$name <- "Andre Iguodala"
kevin$name <- "Kevin Durant"
dramond$name <- "Draymond Green"
setwd("~/Dropbox/School/STAT133/workout1/code")
steph <- read.csv("../data/stephen-curry.csv", stringsAsFactors = FALSE)
klay <- read.csv("../data/klay-thompson.csv", stringsAsFactors = FALSE)
andre <- read.csv("../data/andre-iguodala.csv", stringsAsFactors = FALSE)
kevin <- read.csv("../data/kevin-durant.csv", stringsAsFactors = FALSE)
draymond <- read.csv("../data/draymond-green.csv", stringsAsFactors = FALSE)
steph$name <- "Stephen Curry"
klay$name <- "Klay Thompson"
andre$name <- "Andre Iguodala"
kevin$name <- "Kevin Durant"
dramond$name <- "Draymond Green"
draymond$name <- "Draymond Green"
steph <- read.csv("../data/stephen-curry.csv", stringsAsFactors = FALSE)
klay <- read.csv("../data/klay-thompson.csv", stringsAsFactors = FALSE)
andre <- read.csv("../data/andre-iguodala.csv", stringsAsFactors = FALSE)
kevin <- read.csv("../data/kevin-durant.csv", stringsAsFactors = FALSE)
draymond <- read.csv("../data/draymond-green.csv", stringsAsFactors = FALSE)
steph$name <- "Stephen Curry"
klay$name <- "Klay Thompson"
andre$name <- "Andre Iguodala"
kevin$name <- "Kevin Durant"
draymond$name <- "Draymond Green"
steph[steph$shot_made_flag == "n"] <- "shot_no"
steph[steph$shot_made_flag == "y"] <- "shot_yes"
klay[klay$shot_made_flag == "n"] <- "shot_no"
klay[klay$shot_made_flag == "y"] <- "shot_yes"
andre[andre$shot_made_flag == "n"] <- "shot_no"
andre[andre$shot_made_flag == "y"] <- "shot_yes"
kevin[kevin$shot_made_flag == "n"] <- "shot_no"
kevin[kevin$shot_made_flag == "y"] <- "shot_yes"
draymond[draymond$shot_made_flag == "n"] <- "shot_no"
draymond[draymond$shot_made_flag == "y"] <- "shot_yes"
steph[steph$shot_made_flag == "n",] <- "shot_no"
steph[steph$shot_made_flag == "y",] <- "shot_yes"
klay[klay$shot_made_flag == "n",] <- "shot_no"
klay[klay$shot_made_flag == "y",] <- "shot_yes"
andre[andre$shot_made_flag == "n",] <- "shot_no"
andre[andre$shot_made_flag == "y",] <- "shot_yes"
kevin[kevin$shot_made_flag == "n",] <- "shot_no"
kevin[kevin$shot_made_flag == "y",] <- "shot_yes"
draymond[draymond$shot_made_flag == "n",] <- "shot_no"
draymond[draymond$shot_made_flag == "y",] <- "shot_yes"
steph <- read.csv("../data/stephen-curry.csv", stringsAsFactors = FALSE)
klay <- read.csv("../data/klay-thompson.csv", stringsAsFactors = FALSE)
andre <- read.csv("../data/andre-iguodala.csv", stringsAsFactors = FALSE)
kevin <- read.csv("../data/kevin-durant.csv", stringsAsFactors = FALSE)
draymond <- read.csv("../data/draymond-green.csv", stringsAsFactors = FALSE)
steph$name <- "Stephen Curry"
klay$name <- "Klay Thompson"
andre$name <- "Andre Iguodala"
kevin$name <- "Kevin Durant"
draymond$name <- "Draymond Green"
steph[steph$shot_made_flag == "n",'shot_made_flag'] <- "shot_no"
steph[steph$shot_made_flag == "y",'shot_made_flag'] <- "shot_yes"
klay[klay$shot_made_flag == "n",'shot_made_flag'] <- "shot_no"
klay[klay$shot_made_flag == "y",'shot_made_flag'] <- "shot_yes"
andre[andre$shot_made_flag == "n",'shot_made_flag'] <- "shot_no"
andre[andre$shot_made_flag == "y",'shot_made_flag'] <- "shot_yes"
kevin[kevin$shot_made_flag == "n",'shot_made_flag'] <- "shot_no"
kevin[kevin$shot_made_flag == "y",'shot_made_flag'] <- "shot_yes"
draymond[draymond$shot_made_flag == "n",'shot_made_flag'] <- "shot_no"
draymond[draymond$shot_made_flag == "y",'shot_made_flag'] <- "shot_yes"
steph
steph$minute <- steph$period * 12 - steph$minutes_remaining
steph
steph$minute <- steph$period * 12 - steph$minutes_remaining
klay$minute <- klay$period * 12 - klay$minutes_remaining
andre$minute <- andre$period * 12 - andre$minutes_remaining
kevin$minute <- kevin$period * 12 - kevin$minutes_remaining
draymond$minute <- draymond$period * 12 - draymond$minutes_remaining
sink("../output/stephen-curry-summary.txt")
summary(steph)
sink()
sink("../output/klay-thompson-summary.txt")
summary(klay)
sink()
sink("../output/andre-iguodala-summary.txt")
summary(andre)
sink()
sink("../output/kevin-durant-summary.txt")
summary(kevin)
sink()
sink("../output/draymond-green-summary.txt")
summary(draymond)
sink()
main_table <- rbind(steph, rbind(klay, rbind(andre, rbind(kevin, draymond))))
main_table
write.csv(
x = main_table,
file = '../data/shots-data.csv'
)
sink("../output/shots-data-summary.txt")
summary(main_table)
sink()
klay_scatterplot <- ggplot(data = klay) +
geom_point(aes(x = x, y = y, color = shot_made_flag))
library(ggplot2)
shots_data <- read.csv("./data/shots-data.csv", stringsAsFactors = FALSE)
setwd("~/Dropbox/School/STAT133/workout1/code")
library(ggplot2)
shots_data <- read.csv("./data/shots-data.csv", stringsAsFactors = FALSE)
shots_data <- read.csv("../data/shots-data.csv", stringsAsFactors = FALSE)
klay_scatterplot <- ggplot(data = klay) +
geom_point(aes(x = x, y = y, color = shot_made_flag))
klay_scatterplot
klay_scatterplot <- ggplot(data = shots_data[shots_data$name == "Klay Thompson"]) +
geom_point(aes(x = x, y = y, color = shot_made_flag))
klay_scatterplot <- ggplot(data = shots_data[shots_data$name == "Klay Thompson",]) +
geom_point(aes(x = x, y = y, color = shot_made_flag))
klay_scatterplot
library(jpeg)
library(grid)
court_file <- "../images/nba-court.jpg"
court_image <- rasterGrob(
readJPEG(court_file),
width = unit(1, "npc"),
height = unit(1, "npc"))
install.packages(jpeg)
install.packages(jpeg)
library(JPEG)
install.packages("jpeg")
library(ggplot2)
library(jpeg)
library(grid)
shots_data <- read.csv("../data/shots-data.csv", stringsAsFactors = FALSE)
klay_scatterplot <- ggplot(data = shots_data[shots_data$name == "Klay Thompson",]) +
geom_point(aes(x = x, y = y, color = shot_made_flag))
klay_scatterplot
court_file <- "../images/nba-court.jpg"
court_image <- rasterGrob(
readJPEG(court_file),
width = unit(1, "npc"),
height = unit(1, "npc"))
klay_shot_chart <- ggplot(data = klay) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Klay Thompson (2016 season)') +
theme_minimal()
klay_shot_chart
klay_shot_chart
klay_shot_chart <- ggplot(data = klay) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Klay Thompson (2016 season)') +
theme_minimal()
klay_shot_chart
klay_shot_chart <- ggplot(data = shots_data[shots_data$name == "Klay Thompson",]) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Klay Thompson (2016 season)') +
theme_minimal()
klay_shot_chart
klay_shot_chart
pdf(file = "stat133-lab05/exports/histogram-mpg.pdf", width=6.5, height=5)
ggplot(data = shots_data[shots_data$name == "Klay Thompson",]) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Klay Thompson (2016 season)') +
theme_minimal()
dev.off()
pdf(file = "stat133-lab05/exports/histogram-mpg.pdf", width=7, height=5)
hist(mtcars$mpg)
dev.off()
pdf(file = "../images/klay-thompson-shot-chart.pdf", width=6.5, height=5)
ggplot(data = shots_data[shots_data$name == "Klay Thompson",]) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Klay Thompson (2016 season)') +
theme_minimal()
dev.off()
pdf(file = "../images/draymond-green-shot-chart.pdf", width=6.5, height=5)
ggplot(data = shots_data[shots_data$name == "Draymond Green",]) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Draymond Green (2016 season)') +
theme_minimal()
dev.off()
pdf(file = "../images/stephen-curry-shot-chart.pdf", width=6.5, height=5)
ggplot(data = shots_data[shots_data$name == "Stephen Curry",]) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Stephen Curry (2016 season)') +
theme_minimal()
dev.off()
pdf(file = "../images/kevin-durant-shot-chart.pdf", width=6.5, height=5)
ggplot(data = shots_data[shots_data$name == "Kevin Durant",]) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Kevin Durant (2016 season)') +
theme_minimal()
dev.off()
pdf(file = "../images/andre-iguodala-shot-chart.pdf", width=6.5, height=5)
ggplot(data = shots_data[shots_data$name == "Andre Iguodala",]) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Andre Iguodala (2016 season)') +
theme_minimal()
dev.off()
gsw_shot_chart <- ggplot(data = group_by(shots_data, shots_data$name)) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: GSW (2016 season)') +
facet_wrap(~ name) +
theme_minimal()
gsw_shot_chart
gsw_shot_chart <- ggplot(data = shots_data) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: GSW (2016 season)') +
facet_wrap(~ name) +
theme_minimal()
gsw_shot_chart
pdf(file = "../images/gsw-shot-charts.pdf", width=8, height=7)
ggplot(data = shots_data) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag, size=1)) +
ylim(-50, 420) +
ggtitle('Shot Charts: GSW (2016 season)') +
facet_wrap(~ name) +
theme_minimal()
dev.off()
pdf(file = "../images/gsw-shot-charts.pdf", width=8, height=7)
ggplot(data = shots_data) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag, size=0.5)) +
ylim(-50, 420) +
ggtitle('Shot Charts: GSW (2016 season)') +
facet_wrap(~ name) +
theme_minimal()
dev.off()
pdf(file = "../images/gsw-shot-charts.pdf", width=8, height=7)
ggplot(data = shots_data) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag, size=3)) +
ylim(-50, 420) +
ggtitle('Shot Charts: GSW (2016 season)') +
facet_wrap(~ name) +
theme_minimal()
dev.off()
pdf(file = "../images/gsw-shot-charts.pdf", width=8, height=7)
ggplot(data = shots_data) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Charts: GSW (2016 season)') +
facet_wrap(~ name) +
theme_minimal()
dev.off()
