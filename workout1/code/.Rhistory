nba[nba$points == 0, "points]" <- 0.1
nba[nba$points == 0, "points]" <- 0.1
nba[nba$points == 0, "points"] <- 0.1
hist(log(nba$points), breaks=200)
hist(nba$points, breaks=200)
hist(log(nba$points), breaks=200)
boxplot(salary2 ~ age, data = nba, xlab = "Age", ylab = "Salary (in millions)")
nba <- read.csv(datafile, colClasses = data_types, na.strings = "")
boxplot(salary2 ~ age, data = nba, xlab = "Age", ylab = "Salary (in millions)")
github <- 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo <- 'master/data/nba2018-players.csv'
datafile <- paste0(github, repo)
data_types <- c("character", "factor", "factor", "integer", "integer", "integer", "integer", "character", "double", "integer", "integer", "integer", "integer", "integer", "integer")
nba <- read.csv(datafile, colClasses = data_types, na.strings = "")
str(nba, vec.len = 1)
nba2 <- read.table(datafile, sep = ",", colClasses = data_types, header = TRUE)
str(nba2, vec.len = 1)
identical(nba, nba2)
# a)
summary(nba$salary)
# b)
hist(nba$salary, breaks=200)
# c)
nba$salary2 <- nba$salary / 1000000
hist(nba$salary2, breaks=200)
# d) The distribution is more level among the high salaries and level among the low salaries
nba$salary2 <- log(nba$salary2)
hist(nba$salary2, breaks=200)
nba$salary2
nba$salary3 <- log(nba$salary2)
nba$salary3
hist(nba$salary3, breaks=200)
low <- nba[nba$salary3 < -3,]
low <- low[complete.cases(low), ]
length(low$player)
nba <- subset(nba, !nba$player %in% low$player)
dim(nba)
summary(nba$points)
hist(nba$points, breaks=200)
nba[nba$points == 0, "points"] <- 0.1
hist(log(nba$points), breaks=200)
# b) The log shifts the values to the right. Values are heavily skewed towards 6/7.
boxplot(salary2 ~ age, data = nba, xlab = "Age", ylab = "Salary (in millions)")
# a)
boxplot(points ~ age, data = nba, xlab = "Age", ylab = "Salary (in millions)")
boxplot(points ~ age, data = nba, xlab = "Age", ylab = "Points")
age2 <- nba$age
age2[age2 < 19] <- 20
age2 <- cut(age2, breaks = c(20, 24, 25, 29, 30, 100), lables = c("20-24", "25-29", "30+"))
age2
age2 <- cut(age2, breaks = c(20, 24,  29, 30, max(age2)), lables = c("20-24", "25-29", "30+"))
age2 <- cut(age2, breaks = c(20, 24, 29, 30, 100), lables = c("20-24", "25-29", "30+"))
age2 <- cut(age2, breaks = c(20, 24, 25, 29, 30, 100), lables = c("20-24", "25-29", "30+"))
age2
age2 <- cut(age2, breaks = c(20, 24, 25, 29, 30, 100), lables = c("20-24", "25-29", "30+"))
age2[age2 < 19] <- 20
age2
age2 <- nba$age
age2[age2 < 19] <- 20
age2 <- cut(age2, breaks = c(20, 24, 25, 29, 30, 100), lables = c("20-24", "25-29", "30+"))
age2
age2 <- nba$age
age2 <- cut(age2, breaks = c(20, 24, 25, 29, 30, max(age2)), lables = c("20-24", "25-29", "30+"))
age2
summary(age2)
age2 <- age2[c(TRUE, FALSE, TRUE, FALSE, TRUE, FALSE)]
summary(age2)
age2[age2 < 19] <- 20
age2
age2 <- nba$age
age2
age2[age2 <= 19] <- 20
age2
age2 <- nba$age
age2
age2 <- cut(age2, breaks = c(20, 24, 25, 29, max(age2)), lables = c("20-24", "25-29", "30+"))
age2
age2 <- age2[c(TRUE, FALSE, TRUE, FALSE, TRUE, FALSE)]
summary(age2)
age2 <- cut(age2, breaks = c(19, 24, 29), lables = c("20-24", "25-29", "30+"))
age2
age2 <- cut(age2, breaks = c(19, 24, 29), lables = c("20-24", "25-29", "30+"))
age2 <- nba$age
age2
age2
age2
summary(age2)
age2
age2 <- cut(age2, breaks = c(19, 24, 29), lables = c("20-24", "25-29", "30+"))
age2
summary(age2)
age2 <- nba$age
age2[age2 <= 19] <- 20
age2
age2
age2 <- cut(age2, breaks = c(19, 24, 29, max(age2)), lables = c("20-24", "25-29", "30+"))
age2
summary(age2)
palette1 <- c("#D4D62A", "#4F9D66", "#9575AB")
age_colors <- c(palette1[[1]], palette1[[2]], palette1[[3]])
age_colors
plot(salary ~ points, data = nba, log = "xy", main = "",
xlab = "Points (log scale)", ylab = "Salary (log $)",
col = age_colors, pch = 19, cex = 0.6)
legend("bottomright", fill = palette1, legend = levels(age2),
title = "Age Groups", cex = 0.8)
boxplot(salary2 ~ position, data = nba,
xlab = "position", ylab = "Salary (in millions)")
boxplot(points ~ position, data = nba, xlab = "Position", ylab = "Points")
pos_colors <- c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854")
plot(salary ~ points, data = nba, log = "xy", main = "",
xlab = "Points (log scale)", ylab = "Salary (log $)",
col = pos_colors, pch = 19, cex = 0.6)
legend("bottomright", fill = palette1, legend = levels(age2),
title = "Age Groups", cex = 0.8)
pos_colors <- c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854")
plot(salary ~ points, data = nba, log = "xy", main = "",
xlab = "Points (log scale)", ylab = "Salary (log $)",
col = pos_colors, pch = 19, cex = 0.6)
legend("bottomright", fill = pos_colors, legend = c("C", "PF", "PG", "Sf", "SG"),
title = "Positions", cex = 0.8)
pos_colors <- c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854")
plot(salary ~ points, data = nba, log = "xy", main = "",
xlab = "Points (log scale)", ylab = "Salary (log $)",
col = pos_colors, pch = 19, cex = 0.6)
legend("bottomright", fill = pos_colors, legend = c("C", "PF", "PG", "SF", "SG"),
title = "Positions", cex = 0.8)
plot(salary ~ points, data = nba, log = "xy", main = "",
xlab = "Points", ylab = "Salary (log $)",
col = pos_colors, pch = 19, cex = 0.6)
legend("bottomright", fill = pos_colors, legend = c("C", "PF", "PG", "SF", "SG"),
title = "Positions", cex = 0.8)
plot(salary ~ points, data = nba, main = "",
xlab = "Points", ylab = "Salary (log $)",
col = pos_colors, pch = 19, cex = 0.6)
, log = "xy"
boxplot(salary2 ~ position, data = nba,
xlab = "Position", ylab = "Salary (in millions)")
# a) It tends to be somewhat stable, with SG's getting a little less
boxplot(points ~ position, data = nba, xlab = "Position", ylab = "Points")
# b) PG's and SF's and C's tend to score the most
pos_colors <- c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854")
plot(salary ~ points, data = nba, log = "xy", main = "",
xlab = "Points", ylab = "Salary (log $)",
col = pos_colors, pch = 19, cex = 0.6)
legend("bottomright", fill = pos_colors, legend = c("C", "PF", "PG", "SF", "SG"),
title = "Positions", cex = 0.8)
plot(salary ~ points, data = nba, main = "",
xlab = "Points", ylab = "Salary (log $)",
col = pos_colors, pch = 19, cex = 0.6)
plot(salary ~ points, data = nba, log="y", main = "",
xlab = "Points", ylab = "Salary (log $)",
col = pos_colors, pch = 19, cex = 0.6)
plot(salary ~ points, data = nba, log="x", main = "",
xlab = "Points", ylab = "Salary (log $)",
col = pos_colors, pch = 19, cex = 0.6)
legend("bottomright", fill = pos_colors, legend = c("C", "PF", "PG", "SF", "SG"),
title = "Positions", cex = 0.8)
plot(salary ~ points, data = nba, log="xy", main = "",
xlab = "Points", ylab = "Salary (log $)",
col = pos_colors, pch = 19, cex = 0.6)
legend("bottomright", fill = pos_colors, legend = c("C", "PF", "PG", "SF", "SG"),
title = "Positions", cex = 0.8)
summary(age2)
age2 <- cut(age2, breaks = c(19, 24, 29, max(age2)), labels = c("20-24", "25-29", "30+"))
summary(age2)
age2 <- cut(age2, breaks = c(19, 24, 29, max(age2)), labels = c("20-24", "25-29", "30+"))
age2 <- nba$age
age2[age2 <= 19] <- 20
age2 <- cut(age2, breaks = c(19, 24, 29, max(age2)), labels = c("20-24", "25-29", "30+"))
summary(age2)
palette1 <- c("#D4D62A", "#4F9D66", "#9575AB")
age_colors <- c(palette1[[1]], palette1[[2]], palette1[[3]])
plot(salary ~ points, data = nba, log = "xy", main = "",
xlab = "Points (log scale)", ylab = "Salary (log $)",
col = age_colors, pch = 19, cex = 0.6)
legend("bottomright", fill = palette1, legend = levels(age2),
title = "Age Groups", cex = 0.8)
age2 <- nba$age
age2[age2 <= 19] <- 20
age2 <- cut(age2, breaks = c(19, 24, 29, max(age2)), labels = c("20-24", "25-29", "30+"))
summary(age2)
palette1 <- c("#D4D62A", "#4F9D66", "#9575AB")
age_colors <- c(palette1[[1]], palette1[[2]], palette1[[3]])
plot(salary ~ points, data = nba, log = "xy", main = "",
xlab = "Points (log scale)", ylab = "Salary (log $)",
col = age_colors, pch = 19, cex = 0.6)
legend("bottomright", fill = palette1, legend = levels(age2),
title = "Age Groups", cex = 0.8)
plot(salary ~ points, data = nba, log = "y", main = "",
xlab = "Points (log scale)", ylab = "Salary (log $)",
col = age_colors, pch = 19, cex = 0.6)
legend("bottomright", fill = palette1, legend = levels(age2),
title = "Age Groups", cex = 0.8)
plot(salary ~ points, data = nba, log = "xy", main = "",
xlab = "Points (log scale)", ylab = "Salary (log $)",
col = age_colors, pch = 19, cex = 0.6)
palette1 <- c("#D4D62A", "#4F9D66", "#9575AB")
age_colors <- vector(mode="character", length = length(age2))
age_colors[which(age2 == "20-24")] <- palette1[1]
age_colors[which(age2 == "25-29")] <- palette1[2]
age_colors[which(age2 == "30+")] <- palette1[3]
plot(salary ~ points, data = nba, log = "xy", main = "",
xlab = "Points (log scale)", ylab = "Salary (log $)",
col = age_colors, pch = 19, cex = 0.6)
legend("bottomright", fill = palette1, legend = levels(age2),
title = "Age Groups", cex = 0.8)
rdata <- "https://github.com/ucb-stat133/stat133-labs/raw/master/data/nba2018-salary-points.RData"
download.file(url = rdata, destfile = 'nba2018-salary-points.RData')
install.packages(c("ggplot2", "plotly"))
library(plotly)
salaries15Mil <- position_fac[salary > 15000000]
evens <- player[seq(from=2, to=length(player), by=2)]
evens
odds <- salary[seq(from=1, to=length(salary), by=2)]
load('nba2018-salary-points.RData')
evens <- player[seq(from=2, to=length(player), by=2)]
evens
odds <- salary[seq(from=1, to=length(salary), by=2)]
odds
fives <- team[seq(from=5, to=length(team), by=5)]
fives
tens <- scored[seq(from=10, to=length(scored), by=10)]
tens
reversed <- rev(team[seq(from=2, to=length(team), by=2)])
reversed
centers <- player[team == 'GSW' & position == 'C']
centers
both <- player[team == 'GSW' | team == 'LAL']
both
shootingAndPointGuards <- player[team == 'LAL' & (position == 'SG' | position == 'PG')]
shootingAndPointGuards
smallForwards <- player[(team == 'GWS' | team == 'LAL') & position == 'SF']
smallForwards
largestSalary <- player[salary == max(salary)]
largestSalary
smallestSalary <- player[salary == min(salary)]
smallestSalary
maxScored <- player[scored == max(scored)]
maxScored
minScored <- player[scored == min(scored)]
minScored
maxCenter <- player[salary == max(salary[match(player[position == 'C'], player)]) & position == 'C']
maxCenter
highestScoredTeam <- team[match(player[scored == max(scored)], player)]
highestScoredTeam
most3Pointers <- player[points3 == max(points3)]
most3Pointers
library(plotly)
plot(scored[team == 'GSW'], salary[team == 'GSW'])
text(scored[team == 'GSW'], salary[team == 'GSW'], labels=player[team == 'GSW'])
plot(log(scored[team == 'GSW']), log(salary[team == 'GSW']))
text(log(scored[team == 'GSW']), log(salary[team == 'GSW']), labels=player[team == 'GSW'])
position_fac <- factor(position)
positionWarriors <- position_fac[match(player[team == 'GSW'], player)]
positionWarriors
salaries15Mil <- position_fac[salary > 15000000]
salaries15Mil
freqs <- table(salaries15Mil)
freqs
freqSGs <- table(team[match(player[position == 'SG'], player)])
freqSGs
plot(scored, salary, col = position_fac, pch = '*', cex=1)
salaries15Mil <- position_fac[match(player[salary > 15000000], player)]
salaries15Mil
salaries15Mil <- position_fac[salary > 15000000]
salaries15Mil
plot(abalone$Height)
# a) Scatter Plot
plot(abalone$Sex)
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data"
abalone <- read.table(url, sep = ",")
head(abalone)
tail(abalone)
str(abalone, vec.len = 1)
column_names <- c("Sex", "Length", "Diameter", "Height", "Whole", "Shucked", "Viscera", "Shell", "Rings")
column_types <- c("factor", "real", "real", "real", "real", "real", "real", "real", "integer")
abalone <- read.table(url, sep = ",", col.names = column_names, colClasses = column_types)
str(abalone, vec.len = 1)
abalone2 <- read.csv(url, header = FALSE)
str(abalone2, vec.len = 1)
abalone10 <- read.table(url, sep = ",", col.names = column_names, colClasses = column_types, nrows = 10)
str(abalone10, vec.len = 1)
abalone20 <- read.table(url, sep = ",", col.names = column_names, colClasses = column_types, nrows = 10, skip = 10)
str(abalone20, vec.len = 1)
summary(abalone)
head(abalone)
tail(abalone)
dim(abalone)
names(abalone)
colnames(abalone)
nrow(abalone)
ncol(abalone)
# a) When you specify a column as NULL in colClasses, the column is skipped.
rows <- c("Min", "Max", "Mean", "SD")
mins <- c(min(abalone[,2]), min(abalone[,3]), min(abalone[,4]), min(abalone[,5]), min(abalone[,6]), min(abalone[,7]), min(abalone[,8]), min(abalone[,9]))
maxes <- c(max(abalone[,2]), max(abalone[,3]), max(abalone[,4]), max(abalone[,5]), max(abalone[,6]), max(abalone[,7]), max(abalone[,8]), max(abalone[,9]))
means <- c(mean(abalone[,2]), mean(abalone[,3]), mean(abalone[,4]), mean(abalone[,5]), mean(abalone[,6]), mean(abalone[,7]), mean(abalone[,8]), mean(abalone[,9]))
SDs <- sapply(abalone, sd, na.rm = TRUE)
SDs
lens <- c(min(abalone[,2]), max(abalone[,2]), mean(abalone[,2]), SDs[2])
diams <- c(min(abalone[,3]), max(abalone[,3]), mean(abalone[,3]), SDs[3])
heights <- c(min(abalone[,4]), max(abalone[,4]), mean(abalone[,4]), SDs[4])
wholes <- c(min(abalone[,5]), max(abalone[,5]), mean(abalone[,5]), SDs[5])
shucks <- c(min(abalone[,6]), max(abalone[,6]), mean(abalone[,6]), SDs[6])
viscersas <- c(min(abalone[,7]), max(abalone[,7]), mean(abalone[,7]), SDs[7])
shells <- c(min(abalone[,8]), max(abalone[,8]), mean(abalone[,8]), SDs[8])
rings <- c(min(abalone[,9]), max(abalone[,9]), mean(abalone[,9]), SDs[9])
data <- data.frame("Length" = lens, "Diam" = diams, "Height" = heights, "Whole" = wholes, "Shucked" = shucks, "Viscera" = viscersas, "Shell" = shells, "Rings" = rings, row_names = rows)
data
abalone[1:5,]
abalone[seq(from = 5, to = 50, by = 5),]
abalone[seq(from = length(abalone[[1]]), to = length(abalone[[1]]) - 5, by = -1),]
colnames(abalone)
height14 <- data.frame(abalone[abalone[["Height"]] < 0.14,])
dim(height14)
infant <- data.frame(abalone[abalone[["Sex"]] == 'I',])
dim(infant)
male_female <- data.frame(abalone[abalone[["Sex"]] == 'M' | abalone[["Sex"]] == 'F',])
dim(male_female)
data.frame(abalone[abalone[["Rings"]] > 25, c(1, 9)])
data.frame(abalone[abalone[["Sex"]] == 'I' & abalone[["Rings"]] > 3 & abalone[["Rings"]] < 6, c(1,3,9)])
abies <- abalone[abalone$Sex == 'I', c('Length', 'Height', 'Diameter', 'Whole', 'Shucked')]
abies$product <- abies$Whole * abies$Shucked
abies3 <- data.frame("log_height" = log(abies$Height), "log_length" = log(abies$Length))
filtered <- abalone[abalone[["Height"]] < 0.12,]
ordered <- filtered[order(filtered$Height, decreasing = FALSE),]
ordered2 <- abalone[order(abalone$Height, decreasing = TRUE),]
data.frame("Sex" = ordered2[1:5, 1], "Diameter" = ordered2[1:5, 3], "Rings" = ordered2[1:5, 9])
ordered3 <- abalone[order(abalone$Length, decreasing = TRUE),]
data.frame("Sex" = ordered3[1:5, 1], "Diameter" = ordered3[1:5, 3], "Rings" = ordered3[1:5, 9])
plot(abalone$Height)
# a) Scatter Plot
plot(abalone$Sex)
# b) Bar Plot
plot(abalone$Height, abalone$Length)
plot(data.frame("L" = lens, "H" = heights))
# c) Scatter Plot
plot(data.frame("L" = lens, "H" = heights, "D" = diams))
# d) Scatter Plot
plot(data.frame(abalone$Sex, abalone$Length))
# e) Scatter Plot Matrix
plot(data.frame(abalone$Length, abalone$Sex))
# f) Box Plot
plot(data.frame(abalone$Sex, abalone$Length))
# g) Scatter Plot
plot(data.frame(abalone$Length, abalone$Sex))
plot.default(abalone$Length, abalone$Height, pch = "*", xlab = "Length", ylab = "Height", main = "Length vs. Height")
typeof(dat)
typeof(dat)
library(dplyr)
library(ggplot2)
rdata <- "https://github.com/ucb-stat133/stat133-labs/raw/master/data/nba2018-salary-points.RData"
download.file(url = rdata, destfile = 'nba2018-salary-points.RData')
load('nba2018-salary-points.RData')
dat <- read.csv('nba2018-players.csv', stringsAsFactors = FALSE)
typeof(dat)
dat[1:5]
dat[1:3]
slice(dat, 1:5)
head(d, 5)
head(dat, 5)
summarise(dat, max_height = max(height))
summarise(dat, Standard_Deviation = sapply(dat, sd, na.rm = TRUE)['points3'])
summarise(group_by(dat, team), median(points3))
summarise(dat[position == 'PF' & experience >= 5 & experience <= 10], mean = mean(age), SD = sapply(dat, sd, na.rm = TRUE)['age'])
geom_point(aes(x = points, y = salary, color = position, size = points3), alpha = 0.7)
ggplot(data = dat +
geom_point(aes(x = points, y = salary, color = position, size = points3), alpha = 0.7)
ggplot(data = dat) +
geom_point(aes(x = points, y = salary, color = position, size = points3), alpha = 0.7)
ggplot(data = dat, aes(x = points, y = salary)) +
geom_point(aes(color = position, size = points3), alpha = 0.7)
ggplot(data = dat, aes(x=points2)) + geom_histogram(binwidth=50)
ggplot(data = dat, aes(x=salary)) + geom_density()
ggplot(data = dat[position == 'C',]) +
geom_point(aes(x = experience, y = salary)) + geom_smooth(aes(x = experience, y = salary), method='lm')
ggplot(data = dat, aes(x = experience, y = salary)) +
geom_point() +
facet_wrap(~ position)
ggplot(data = dat, aes(x = height, y = weight)) +
geom_point() +
facet_wrap(~ position)
ggplot(data = dat, aes(x = height, y = weight)) +
geom_point() +
facet_wrap(position ~)
ggplot(data = dat, aes(x = height, y = weight)) +
geom_point() +
facet_wrap(position ~ .)
ggplot(data = dat, aes(x = height, y = weight)) +
geom_point() +
facet_wrap(. ~ position)
ggplot(data = dat, aes(x=age)) + geom_density() + facet_wrap(~ team)
ggplot(data = dat, aes(x=age)) + geom_density() + facet_wrap(team ~)
ggplot(data = dat, aes(x=age)) + geom_density() + facet_wrap(team ~ .)
~
ggplot(data = dat, aes(x=age)) + geom_density() + facet_wrap(~ team)
ggplot(data = dat, aes(x=age)) + geom_density() + facet_wrap(~ team)
ggplot(data = dat, aes(x = height, y = weight)) +
geom_density2d() +
geom_point() +
facet_wrap(~ position)
ggplot(data = dat[team == 'GSW',], aes(x = experience, y = salary)) +
geom_point() +
theme_bw() +
facet_wrap(~ team)
ggplot(data = dat, aes(x = height, y = weight)) +
geom_density2d() +
geom_point() +
theme_dark() +
facet_wrap(~ position)
typeof(dat)
ggplot(data = dat, aes(x = height, y = weight)) +
geom_density2d() +
geom_point() +
theme_dark() +
facet_wrap(. ~ position)
ggplot(data = dat, aes(x = height, y = weight)) +
geom_density2d() +
geom_point() +
theme_dark() +
facet_wrap(position ~ .)
ggplot(data = dat, aes(x = height, y = weight)) +
geom_density2d() +
geom_point() +
theme_dark() +
facet_wrap(~position)
pdf(file = "../images/gsw-shot-charts.pdf", width=8, height=7)
ggplot(data = shots_data) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Charts: GSW (2016 season)') +
facet_wrap(~ name) +
theme_minimal()
dev.off()
library(ggplot2)
library(jpeg)
library(grid)
shots_data <- read.csv("../data/shots-data.csv", stringsAsFactors = FALSE)
court_image <- rasterGrob(
readJPEG(court_file),
width = unit(1, "npc"),
height = unit(1, "npc"))
court_file <- "../images/nba-court.jpg"
pdf(file = "../images/klay-thompson-shot-chart.pdf", width=6.5, height=5)
ggplot(data = shots_data[shots_data$name == "Klay Thompson",]) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Klay Thompson (2016 season)') +
theme_minimal()
pdf(file = "../images/draymond-green-shot-chart.pdf", width=6.5, height=5)
ggplot(data = shots_data[shots_data$name == "Draymond Green",]) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Draymond Green (2016 season)') +
theme_minimal()
dev.off()
dev.off()
ggplot(data = shots_data) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Charts: GSW (2016 season)') +
facet_wrap(~ name) +
theme_minimal()
shots_data <- read.csv("../data/shots-data.csv", stringsAsFactors = FALSE)
setwd("C:/Users/Kyle/Dropbox/School/STAT133/hw-stat133/workout1/code")
shots_data <- read.csv("../data/shots-data.csv", stringsAsFactors = FALSE)
court_file <- "../images/nba-court.jpg"
ggplot(data = shots_data) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Charts: GSW (2016 season)') +
facet_wrap(~ name) +
theme_minimal()
court_file <- "../images/nba-court.jpg"
court_image <- rasterGrob(
readJPEG(court_file),
width = unit(1, "npc"),
height = unit(1, "npc"))
library(ggplot2)
library(jpeg)
library(grid)
shots_data <- read.csv("../data/shots-data.csv", stringsAsFactors = FALSE)
court_file <- "../images/nba-court.jpg"
court_image <- rasterGrob(
readJPEG(court_file),
width = unit(1, "npc"),
height = unit(1, "npc"))
packages.install("jpeg")
package.install("jpeg")
install.packages("jpeg")
library(ggplot2)
library(jpeg)
library(grid)
shots_data <- read.csv("../data/shots-data.csv", stringsAsFactors = FALSE)
court_file <- "../images/nba-court.jpg"
court_image <- rasterGrob(
readJPEG(court_file),
width = unit(1, "npc"),
height = unit(1, "npc"))
ggplot(data = shots_data) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Charts: GSW (2016 season)') +
facet_wrap(~ name) +
theme_minimal()
