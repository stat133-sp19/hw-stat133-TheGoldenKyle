```
## 2
```{r eval=FALSE}
pwd
pwd
head(mtcars)
getwd()
write.csv(
x = mtcars, # R object to be exported
file = 'stat133-lab05/exports.csv'  # file path
)
write.csv(
x = mtcars, # R object to be exported
file = 'stat133-lab05/exports/mtcars.csv'  # file path
)
sink(file = 'stat133-lab05/summary-mpg-disp.txt')
summary(mtcars[ ,c('mpg', 'disp')])
sink()
png(filename = "stat133-lab05/exports/scatterplot-mpg-disp.png")
plot(mtcars$mpg, mtcars$disp, pch = 20,
xlab = 'Miles per Gallon', ylab = 'Displacement')
dev.off()
# Your Turn
write.csv(
x = mtcars[c("mpg", "disp", "hp")], # R object to be exported
file = 'stat133-lab05/exports/dataset,csv'  # file path
)
sink(file = 'stat133-lab05/exports/mtcars-structure.txt')
str(mtcars)
sink()
sink(file = 'stat133-lab05/exports/summary-mtcars.txt')
summary(mtcars)
sink()
png(filename = "stat133-lab05/exports/scatterplot-mpg-wt.png")
plot(mtcars$mpg, mtcars$wt, pch = 20,
xlab = 'Miles per Gallon', ylab = 'Weight')
dev.off()
head(mtcars)
getwd()
write.csv(
x = mtcars, # R object to be exported
file = 'stat133-lab05/exports/mtcars.csv'  # file path
)
sink(file = 'stat133-lab05/summary-mpg-disp.txt')
summary(mtcars[ ,c('mpg', 'disp')])
sink()
png(filename = "stat133-lab05/exports/scatterplot-mpg-disp.png")
plot(mtcars$mpg, mtcars$disp, pch = 20,
xlab = 'Miles per Gallon', ylab = 'Displacement')
dev.off()
# Your Turn
write.csv(
x = mtcars[c("mpg", "disp", "hp")], # R object to be exported
file = 'stat133-lab05/exports/dataset,csv'  # file path
)
sink(file = 'stat133-lab05/exports/mtcars-structure.txt')
str(mtcars)
sink()
sink(file = 'stat133-lab05/exports/summary-mtcars.txt')
summary(mtcars)
sink()
png(filename = "stat133-lab05/exports/scatterplot-hp-wt.png", res=300)
plot(mtcars$hp, mtcars$wt, pch = 20,
xlab = 'Horsepower', ylab = 'Weight')
png(filename = "stat133-lab05/exports/scatterplot-hp-wt.png", res=200)
plot(mtcars$hp, mtcars$wt, pch = 20,
xlab = 'Horsepower', ylab = 'Weight')
dev.off()
png(filename = "stat133-lab05/exports/scatterplot-hp-wt.png", res=250)
plot(mtcars$hp, mtcars$wt, pch = 20,
xlab = 'Horsepower', ylab = 'Weight')
dev.off()
png(filename = "stat133-lab05/exports/scatterplot-hp-wt.png", res=250)
plot(mtcars$hp, mtcars$wt, pch = 20,
xlab = 'Horsepower', ylab = 'Weight')
dev.off()
png(filename = "stat133-lab05/exports/scatterplot-hp-wt.png", res=100)
plot(mtcars$hp, mtcars$wt, pch = 20,
xlab = 'Horsepower', ylab = 'Weight')
dev.off()
png(filename = "stat133-lab05/exports/scatterplot-hp-wt.png", res=50)
png(filename = "stat133-lab05/exports/scatterplot-hp-wt.png", res=50)
plot(mtcars$hp, mtcars$wt, pch = 20,
xlab = 'Horsepower', ylab = 'Weight')
dev.off()
jpeg(filename = "stat133-lab05/exports/histogram-mpg.jpeg", width=600, height=400)
hist(mtcars$mpg)
dev.off()
pdf(filename = "stat133-lab05/exports/histogram-mpg.pdf", width=7, height=5)
pdf(filename = "stat133-lab05/exports/histogram-mpg.pdf", height=5)
pdf(file = "stat133-lab05/exports/histogram-mpg.pdf", height=5)
pdf(file = "stat133-lab05/exports/histogram-mpg.pdf", width=7, height=5)
hist(mtcars$mpg)
dev.off()
gg_mpg_disp
gg_mpg_disp <- ggplot(data = mtcars) + geom_point(aes(x = mpg, y = disp))
gg_mpg_disp
library(ggplot2)
gg_mpg_disp <- ggplot(data = mtcars) + geom_point(aes(x = mpg, y = disp))
gg_mpg_disp
head(mtcars)
getwd()
write.csv(
x = mtcars, # R object to be exported
file = 'stat133-lab05/exports/mtcars.csv'  # file path
)
sink(file = 'stat133-lab05/summary-mpg-disp.txt')
summary(mtcars[ ,c('mpg', 'disp')])
sink()
png(filename = "stat133-lab05/exports/scatterplot-mpg-disp.png")
plot(mtcars$mpg, mtcars$disp, pch = 20,
xlab = 'Miles per Gallon', ylab = 'Displacement')
dev.off()
# Your Turn
write.csv(
x = mtcars[c("mpg", "disp", "hp")], # R object to be exported
file = 'stat133-lab05/exports/dataset,csv'  # file path
)
sink(file = 'stat133-lab05/exports/mtcars-structure.txt')
str(mtcars)
sink()
sink(file = 'stat133-lab05/exports/summary-mtcars.txt')
summary(mtcars)
sink()
png(filename = "stat133-lab05/exports/scatterplot-hp-wt.png", res=50)
plot(mtcars$hp, mtcars$wt, pch = 20,
xlab = 'Horsepower', ylab = 'Weight')
dev.off()
jpeg(filename = "stat133-lab05/exports/histogram-mpg.jpeg", width=600, height=400)
hist(mtcars$mpg)
dev.off()
pdf(file = "stat133-lab05/exports/histogram-mpg.pdf", width=7, height=5)
hist(mtcars$mpg)
dev.off()
library(ggplot2)
gg_mpg_disp <- ggplot(data = mtcars) + geom_point(aes(x = mpg, y = disp))
gg_mpg_disp
head(mtcars)
getwd()
write.csv(
x = mtcars, # R object to be exported
file = 'stat133-lab05/exports/mtcars.csv'  # file path
)
sink(file = 'stat133-lab05/summary-mpg-disp.txt')
summary(mtcars[ ,c('mpg', 'disp')])
sink()
png(filename = "stat133-lab05/exports/scatterplot-mpg-disp.png")
plot(mtcars$mpg, mtcars$disp, pch = 20,
xlab = 'Miles per Gallon', ylab = 'Displacement')
dev.off()
# Your Turn
write.csv(
x = mtcars[c("mpg", "disp", "hp")], # R object to be exported
file = 'stat133-lab05/exports/dataset,csv'  # file path
)
sink(file = 'stat133-lab05/exports/mtcars-structure.txt')
str(mtcars)
sink()
sink(file = 'stat133-lab05/exports/summary-mtcars.txt')
summary(mtcars)
sink()
png(filename = "stat133-lab05/exports/scatterplot-hp-wt.png", res=50)
plot(mtcars$hp, mtcars$wt, pch = 20,
xlab = 'Horsepower', ylab = 'Weight')
dev.off()
jpeg(filename = "stat133-lab05/exports/histogram-mpg.jpeg", width=600, height=400)
hist(mtcars$mpg)
dev.off()
pdf(file = "stat133-lab05/exports/histogram-mpg.pdf", width=7, height=5)
hist(mtcars$mpg)
dev.off()
library(ggplot2)
gg_mpg_disp <- ggplot(data = mtcars) + geom_point(aes(x = mpg, y = disp))
gg_mpg_disp
ggsave(filename = "stat133-lab05/exports/scatterplot-mpg-disp.pdf", plot = gg_mpg_disp, width = 7, height = 5)
ggplot(data = points_salary, aes(x=reorder(team, cost_point), y=cost_point)) + geom_bar(stat='identity') + coord_flip() + ylab("Cost per Point ($)") + xlab("Team")  + ggtitle("NBA Teams Ranked by Cost per Point") + geom_abline(slope=0, intercept=mean(points_salary$cost_point), col = "red", lty=1)
library(readr)
github <- 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo <- 'master/data/nba2018-players.csv'
datafile <- paste0(github, repo)
dat <- read_csv(file = datafile, col_types = cols('c', 'f', 'f', 'i', 'i', 'i', 'i', 'c', 'd', 'i', 'i', 'i', 'i', 'i', 'i'))
summary(dat)
typeof(dat)
class(dat)
dat
library(dplyr)
team_salaries <- arrange(group_by(dat, team) %>% summarise(total_salary=sum(salary)/1000000, mean_salary=mean(salary)/1000000, median_salary=median(salary)/1000000), desc(total_salary))
team_salaries
#b
as.data.frame(team_salaries)
#c
library(ggplot2)
ggplot(data = team_salaries, aes(x=reorder(team, total_salary), y=total_salary)) + geom_bar(stat='identity') + coord_flip() + ylab("Total Salary (in Millions)") + xlab("Team")  + ggtitle("NBA Teams Ranked by Total Salary") + geom_abline(slope=0, intercept=mean(team_salaries$total_salary), col = "red", lty=1)
team_points <- arrange(group_by(dat, team) %>% summarise(total_points=sum(points), mean_points=mean(points), median_points=median(points)), desc(total_points))
team_points
#b
as.data.frame(team_points)
#c
ggplot(data = team_points, aes(x=reorder(team, total_points), y=total_points)) + geom_bar(stat='identity') + coord_flip() + ylab("Total Points") + xlab("Team")  + ggtitle("NBA Teams Ranked by Total Points") + geom_abline(slope=0, intercept=mean(team_points$total_points), col = "red", lty=1)
team_points <- arrange(group_by(dat, team) %>% summarise(total_points=sum(points), mean_points=mean(points), median_points=median(points)), desc(total_points))
team_points
#b
as.data.frame(team_points)
#c
ggplot(data = team_points, aes(x=reorder(team, total_points), y=total_points)) + geom_bar(stat='identity') + coord_flip() + ylab("Total Points") + xlab("Team")  + ggtitle("NBA Teams Ranked by Total Points") + geom_abline(slope=0, intercept=mean(team_points$total_points), col = "red", lty=1)
#a
points_salary <- inner_join(team_points, team_salaries, by = "team")
#b
summary(points_salary)
#c
points_salary$cost_point <- points_salary$total_salary / points_salary$total_points
#d
summary(points_salary$cost_point)
ggplot(data = points_salary, aes(x=team, y = cost_point, fill=team)) +
geom_bar(stat="identity") + scale_color_continuous() +
geom_hline(aes(yintercept = mean(points_salary$cost_point)), color="red") +
labs(title = "NBA Total Cost/Total Points Scored Ratio by Team", x = "Teams", y = "Total Cost of Team/Total Points Scored")
ggplot(data = points_salary, aes(x=reorder(team, cost_point), y=cost_point)) + geom_bar(stat='identity') + coord_flip() + ylab("Cost per Point ($)") + xlab("Team")  + ggtitle("NBA Teams Ranked by Cost per Point") + geom_abline(slope=0, intercept=mean(points_salary$cost_point), col = "red", lty=1)
#e
ggplot(data = points_salary, aes(x=reorder(team, cost_point), y=cost_point)) + geom_bar(stat='identity') + coord_flip() + ylab("Cost per Point (in Millions of $)") + xlab("Team")  + ggtitle("NBA Teams Ranked by Cost per Point") + geom_abline(slope=0, intercept=mean(points_salary$cost_point), col = "red", lty=2)
#e
ggplot(data = points_salary, aes(x=reorder(team, cost_point), y=cost_point)) + geom_bar(stat='identity') + coord_flip() + ylab("Cost per Point (in Millions of $)") + xlab("Team")  + ggtitle("NBA Teams Ranked by Cost per Point") + geom_abline(slope=0, intercept=mean(points_salary$cost_point), col = "red", lty=1)
#e
ggplot(data = points_salary, aes(x=reorder(team, cost_point), y=cost_point)) + geom_bar(stat='identity') + coord_flip() + ylab("Cost per Point (in Millions of $)") + xlab("Team")  + ggtitle("NBA Teams Ranked by Cost per Point") + geom_abline(slope=0, intercept=mean(points_salary$cost_point), col = "red", lty=3)
#e
ggplot(data = points_salary, aes(x=reorder(team, cost_point), y=cost_point)) + geom_bar(stat='identity') + coord_flip() + ylab("Cost per Point (in Millions of $)") + xlab("Team")  + ggtitle("NBA Teams Ranked by Cost per Point") + geom_abline(slope=0, intercept=mean(points_salary$cost_point), col = "red", lty=4)
#e
ggplot(data = points_salary, aes(x=reorder(team, cost_point), y=cost_point)) + geom_bar(stat='identity') + coord_flip() + ylab("Cost per Point (in Millions of $)") + xlab("Team")  + ggtitle("NBA Teams Ranked by Cost per Point") + geom_abline(slope=0, intercept=mean(points_salary$cost_point), col = "red", lty=5)
#e
ggplot(data = points_salary, aes(x=reorder(team, cost_point), y=cost_point)) + geom_bar(stat='identity') + coord_flip() + ylab("Cost per Point (in Millions of $)") + xlab("Team")  + ggtitle("NBA Teams Ranked by Cost per Point") + geom_abline(slope=0, intercept=mean(points_salary$cost_point), col = "red", lty=0)
#e
ggplot(data = points_salary, aes(x=reorder(team, cost_point), y=cost_point)) + geom_bar(stat='identity') + coord_flip() + ylab("Cost per Point (in Millions of $)") + xlab("Team")  + ggtitle("NBA Teams Ranked by Cost per Point") + geom_abline(slope=0, intercept=mean(points_salary$cost_point), col = "red", lty=1)
#e
ggplot(data = points_salary, aes(x=reorder(team, cost_point), y=cost_point)) + geom_bar(stat='identity', fill='#FF6666') + coord_flip() + ylab("Cost per Point (in Millions of $)") + xlab("Team")  + ggtitle("NBA Teams Ranked by Cost per Point") + geom_abline(slope=0, intercept=mean(points_salary$cost_point), col = "red", lty=1)
#e
ggplot(data = points_salary, aes(x=reorder(team, cost_point), y=cost_point)) + geom_bar(stat='identity', fill='#222222') + coord_flip() + ylab("Cost per Point (in Millions of $)") + xlab("Team")  + ggtitle("NBA Teams Ranked by Cost per Point") + geom_abline(slope=0, intercept=mean(points_salary$cost_point), col = "red", lty=1)
#e
ggplot(data = points_salary, aes(x=reorder(team, cost_point), y=cost_point)) + geom_bar(stat='identity', fill='#123456') + coord_flip() + ylab("Cost per Point (in Millions of $)") + xlab("Team")  + ggtitle("NBA Teams Ranked by Cost per Point") + geom_abline(slope=0, intercept=mean(points_salary$cost_point), col = "red", lty=1)
#e
ggplot(data = points_salary, aes(x=reorder(team, cost_point), y=cost_point)) + geom_bar(stat='identity', fill='#efefef') + coord_flip() + ylab("Cost per Point (in Millions of $)") + xlab("Team")  + ggtitle("NBA Teams Ranked by Cost per Point") + geom_abline(slope=0, intercept=mean(points_salary$cost_point), col = "red", lty=1)
#e
ggplot(data = points_salary, aes(x=reorder(team, cost_point), y=cost_point)) + geom_bar(stat='identity', fill=team) + coord_flip() + ylab("Cost per Point (in Millions of $)") + xlab("Team")  + ggtitle("NBA Teams Ranked by Cost per Point") + geom_abline(slope=0, intercept=mean(points_salary$cost_point), col = "red", lty=1)
#e
ggplot(data = points_salary, aes(x=reorder(team, cost_point), y=cost_point)) + geom_bar(stat='identity', fill='#cofefe') + coord_flip() + ylab("Cost per Point (in Millions of $)") + xlab("Team")  + ggtitle("NBA Teams Ranked by Cost per Point") + geom_abline(slope=0, intercept=mean(points_salary$cost_point), col = "red", lty=1)
#e
ggplot(data = points_salary, aes(x=reorder(team, cost_point), y=cost_point)) + geom_bar(stat='identity', fill='#COFEFE') + coord_flip() + ylab("Cost per Point (in Millions of $)") + xlab("Team")  + ggtitle("NBA Teams Ranked by Cost per Point") + geom_abline(slope=0, intercept=mean(points_salary$cost_point), col = "red", lty=1)
#e
ggplot(data = points_salary, aes(x=reorder(team, cost_point), y=cost_point)) + geom_bar(stat='identity', fill='#C0FEFE') + coord_flip() + ylab("Cost per Point (in Millions of $)") + xlab("Team")  + ggtitle("NBA Teams Ranked by Cost per Point") + geom_abline(slope=0, intercept=mean(points_salary$cost_point), col = "red", lty=1)
#e
ggplot(data = points_salary, aes(x=reorder(team, cost_point), y=cost_point)) + geom_bar(stat='identity', fill='#00F3FF') + coord_flip() + ylab("Cost per Point (in Millions of $)") + xlab("Team")  + ggtitle("NBA Teams Ranked by Cost per Point") + geom_abline(slope=0, intercept=mean(points_salary$cost_point), col = "red", lty=1)
#e
ggplot(data = points_salary, aes(x=reorder(team, cost_point), y=cost_point)) + geom_bar(stat='identity', fill='#004DFF') + coord_flip() + ylab("Cost per Point (in Millions of $)") + xlab("Team")  + ggtitle("NBA Teams Ranked by Cost per Point") + geom_abline(slope=0, intercept=mean(points_salary$cost_point), col = "red", lty=1)
#e
ggplot(data = points_salary, aes(x=reorder(team, cost_point), y=cost_point)) + geom_bar(stat='identity', fill='#004DFF') + coord_flip() + ylab("Cost per Point (in Millions of $)") + xlab("Team")  + ggtitle("NBA Teams Ranked by Cost per Point") + geom_abline(slope=0, intercept=mean(points_salary$cost_point), col = "orange", lty=1)
#e
ggplot(data = points_salary, aes(x=reorder(team, cost_point), y=cost_point)) + geom_bar(stat='identity', fill='silver') + coord_flip() + ylab("Cost per Point (in Millions of $)") + xlab("Team")  + ggtitle("NBA Teams Ranked by Cost per Point") + geom_abline(slope=0, intercept=mean(points_salary$cost_point), col = "orange", lty=1)
#e
ggplot(data = points_salary, aes(x=reorder(team, cost_point), y=cost_point)) + geom_bar(stat='identity', fill='#A52626') + coord_flip() + ylab("Cost per Point (in Millions of $)") + xlab("Team")  + ggtitle("NBA Teams Ranked by Cost per Point") + geom_abline(slope=0, intercept=mean(points_salary$cost_point), col = "orange", lty=1)
#e
ggplot(data = points_salary, aes(x=reorder(team, cost_point), y=cost_point)) + geom_bar(stat='identity', fill='#A52626') + coord_flip() + ylab("Cost per Point (in Millions of $)") + xlab("Team")  + ggtitle("NBA Teams Ranked by Cost per Point") + geom_abline(slope=0, intercept=mean(points_salary$cost_point), col = "orange", lty=1, size=1)
#f
ggplot(data = points_salary)  + geom_point(aes(x=median_salary, y=median_points)) + ylab("Median Points") + xlab("Median Salary (in Millions)")  + ggtitle("Median Points vs Salary of NBA Teams") + geom_label(size=3, aes(label = paste(team, "| $", round(cost_point * 1000000), "/pt"), x = median_salary, y = median_points))
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) +
geom_point(stat="identity", aes(color = cost_point)) +
scale_color_continuous() +
labs(title = "NBA Median Salary and Median Points by Team", x = "Median Salary (in millions)", y = "Median Points")
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) +
geom_point(stat="identity", aes(size = cost_point)) +
scale_color_continuous() +
labs(title = "NBA Median Salary and Median Points by Team", x = "Median Salary (in millions)", y = "Median Points")
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) +
geom_point(stat="identity", aes(size = cost_point, color = team)) +
scale_color_continuous() +
labs(title = "NBA Median Salary and Median Points by Team", x = "Median Salary (in millions)", y = "Median Points")
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) +
geom_point(stat="identity", aes(size = cost_point), aes(color = team)) +
scale_color_continuous() +
labs(title = "NBA Median Salary and Median Points by Team", x = "Median Salary (in millions)", y = "Median Points")
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) +
geom_point(stat="identity", aes(size = team)) +
scale_color_continuous() +
labs(title = "NBA Median Salary and Median Points by Team", x = "Median Salary (in millions)", y = "Median Points")
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) +
geom_point(stat="identity", aes(size = cost_point)) +
scale_color_continuous() +
labs(title = "NBA Median Salary and Median Points by Team", x = "Median Salary (in millions)", y = "Median Points")
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) +
geom_point(stat="identity", aes(size = cost_point, color = team)) +
scale_color_continuous() +
labs(title = "NBA Median Salary and Median Points by Team", x = "Median Salary (in millions)", y = "Median Points")
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) +
geom_point(stat="identity", aes(size = cost_point, color = team)) +
ggtitle(title = "NBA Median Salary and Median Points by Team") + xlab("Median Salary (in millions)") + ylab("Median Points")
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) +
geom_point(stat="identity", aes(size = cost_point, color = team)) +
ggtitle("NBA Median Salary and Median Points by Team") + xlab("Median Salary (in millions)") + ylab("Median Points")
#f
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) +
geom_point(stat="identity", aes(size = cost_point, color = team)) +
ggtitle("Median Salary vs Median Points by Team") + xlab("Median Salary (in millions)") + ylab("Median Points")
#f
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) +
geom_point(stat="identity", aes(size = cost_point, color = team)) +
ggtitle("Median Salary vs Median Points by Team") + xlab("Median Salary (in millions of $)") + ylab("Median Points")
#f
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) +
geom_point(stat="identity", aes(size = cost_point, name = "Cost/Point" color = team)) +
#f
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) +
geom_point(stat="identity", aes(size = cost_point, name = "Cost/Point", color = team)) +
ggtitle("Median Salary vs Median Points by Team") + xlab("Median Salary (in millions of $)") + ylab("Median Points")
#f
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) +
geom_point(stat="identity", aes(size = cost_point, color = team, name = "Cost/Point")) +
ggtitle("Median Salary vs Median Points by Team") + xlab("Median Salary (in millions of $)") + ylab("Median Points")
#f
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) +
geom_point(stat="identity", aes(size = cost_point, color = team)) +
ggtitle("Median Salary vs Median Points by Team") + xlab("Median Salary (in millions of $)") + ylab("Median Points")
# a) Scatter Plot
plot(abalone$Sex)
tail(abalone)
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data"
abalone <- read.table(url, sep = ",")
head(abalone)
tail(abalone)
str(abalone, vec.len = 1)
column_names <- c("Sex", "Length", "Diameter", "Height", "Whole", "Shucked", "Viscera", "Shell", "Rings")
column_types <- c("character", "real", "real", "real", "real", "real", "real", "real", "integer")
abalone <- read.table(url, sep = ",", col.names = column_names, colClasses = column_types)
str(abalone, vec.len = 1)
abalone2 <- read.csv(url, header = FALSE)
str(abalone2, vec.len = 1)
abalone10 <- read.table(url, sep = ",", col.names = column_names, colClasses = column_types, nrows = 10)
str(abalone10, vec.len = 1)
abalone20 <- read.table(url, sep = ",", col.names = column_names, colClasses = column_types, nrows = 10, skip = 10)
str(abalone20, vec.len = 1)
summary(abalone)
head(abalone)
tail(abalone)
dim(abalone)
names(abalone)
colnames(abalone)
nrow(abalone)
ncol(abalone)
# a) When you specify a column as NULL in colClasses, the column is skipped.
rows <- c("Min", "Max", "Mean", "SD")
mins <- c(min(abalone[,2]), min(abalone[,3]), min(abalone[,4]), min(abalone[,5]), min(abalone[,6]), min(abalone[,7]), min(abalone[,8]), min(abalone[,9]))
maxes <- c(max(abalone[,2]), max(abalone[,3]), max(abalone[,4]), max(abalone[,5]), max(abalone[,6]), max(abalone[,7]), max(abalone[,8]), max(abalone[,9]))
means <- c(mean(abalone[,2]), mean(abalone[,3]), mean(abalone[,4]), mean(abalone[,5]), mean(abalone[,6]), mean(abalone[,7]), mean(abalone[,8]), mean(abalone[,9]))
SDs <- sapply(abalone, sd, na.rm = TRUE)
SDs
lens <- c(min(abalone[,2]), max(abalone[,2]), mean(abalone[,2]), SDs[2])
diams <- c(min(abalone[,3]), max(abalone[,3]), mean(abalone[,3]), SDs[3])
heights <- c(min(abalone[,4]), max(abalone[,4]), mean(abalone[,4]), SDs[4])
wholes <- c(min(abalone[,5]), max(abalone[,5]), mean(abalone[,5]), SDs[5])
shucks <- c(min(abalone[,6]), max(abalone[,6]), mean(abalone[,6]), SDs[6])
viscersas <- c(min(abalone[,7]), max(abalone[,7]), mean(abalone[,7]), SDs[7])
shells <- c(min(abalone[,8]), max(abalone[,8]), mean(abalone[,8]), SDs[8])
rings <- c(min(abalone[,9]), max(abalone[,9]), mean(abalone[,9]), SDs[9])
data <- data.frame("Length" = lens, "Diam" = diams, "Height" = heights, "Whole" = wholes, "Shucked" = shucks, "Viscera" = viscersas, "Shell" = shells, "Rings" = rings, row_names = rows)
data
abalone[1:5,]
abalone[seq(from = 5, to = 50, by = 5),]
abalone[seq(from = length(abalone[[1]]), to = length(abalone[[1]]) - 5, by = -1),]
colnames(abalone)
height14 <- data.frame(abalone[abalone[["Height"]] < 0.14,])
dim(height14)
infant <- data.frame(abalone[abalone[["Sex"]] == 'I',])
dim(infant)
male_female <- data.frame(abalone[abalone[["Sex"]] == 'M' | abalone[["Sex"]] == 'F',])
dim(male_female)
data.frame(abalone[abalone[["Rings"]] > 25, c(1, 9)])
data.frame(abalone[abalone[["Sex"]] == 'I' & abalone[["Rings"]] > 3 & abalone[["Rings"]] < 6, c(1,3,9)])
abies <- abalone[abalone$Sex == 'I', c('Length', 'Height', 'Diameter', 'Whole', 'Shucked')]
abies$product <- abies$Whole * abies$Shucked
abies3 <- data.frame("log_height" = log(abies$Height), "log_length" = log(abies$Length))
filtered <- abalone[abalone[["Height"]] < 0.12,]
ordered <- filtered[order(filtered$Height, decreasing = FALSE),]
ordered2 <- abalone[order(abalone$Height, decreasing = TRUE),]
data.frame("Sex" = ordered2[1:5, 1], "Diameter" = ordered2[1:5, 3], "Rings" = ordered2[1:5, 9])
ordered3 <- abalone[order(abalone$Length, decreasing = TRUE),]
data.frame("Sex" = ordered3[1:5, 1], "Diameter" = ordered3[1:5, 3], "Rings" = ordered3[1:5, 9])
# a) Scatter Plot
plot(abalone$Sex)
plot(abalone$Height)
plot(abalone$Sex)
plot(abalone$Sex)
plot(abalone$Sex, y)
plot.default(abalone$Sex)
plot(Sex ~ group, data=abalone)
plot(Sex, data=abalone)
plot(abalone$Sex, axes = FALSE, main = "no axes")
plot(x=abalone$Sex)
plot(abalone$Sex)
plot(abalone$Sex)
View(abalone)
column_types <- c("factor", "real", "real", "real", "real", "real", "real", "real", "integer")
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data"
abalone <- read.table(url, sep = ",")
head(abalone)
tail(abalone)
str(abalone, vec.len = 1)
column_names <- c("Sex", "Length", "Diameter", "Height", "Whole", "Shucked", "Viscera", "Shell", "Rings")
column_types <- c("factor", "real", "real", "real", "real", "real", "real", "real", "integer")
abalone <- read.table(url, sep = ",", col.names = column_names, colClasses = column_types)
str(abalone, vec.len = 1)
abalone2 <- read.csv(url, header = FALSE)
str(abalone2, vec.len = 1)
abalone10 <- read.table(url, sep = ",", col.names = column_names, colClasses = column_types, nrows = 10)
str(abalone10, vec.len = 1)
abalone20 <- read.table(url, sep = ",", col.names = column_names, colClasses = column_types, nrows = 10, skip = 10)
str(abalone20, vec.len = 1)
summary(abalone)
head(abalone)
tail(abalone)
dim(abalone)
names(abalone)
colnames(abalone)
nrow(abalone)
ncol(abalone)
# a) When you specify a column as NULL in colClasses, the column is skipped.
rows <- c("Min", "Max", "Mean", "SD")
mins <- c(min(abalone[,2]), min(abalone[,3]), min(abalone[,4]), min(abalone[,5]), min(abalone[,6]), min(abalone[,7]), min(abalone[,8]), min(abalone[,9]))
maxes <- c(max(abalone[,2]), max(abalone[,3]), max(abalone[,4]), max(abalone[,5]), max(abalone[,6]), max(abalone[,7]), max(abalone[,8]), max(abalone[,9]))
means <- c(mean(abalone[,2]), mean(abalone[,3]), mean(abalone[,4]), mean(abalone[,5]), mean(abalone[,6]), mean(abalone[,7]), mean(abalone[,8]), mean(abalone[,9]))
SDs <- sapply(abalone, sd, na.rm = TRUE)
SDs
lens <- c(min(abalone[,2]), max(abalone[,2]), mean(abalone[,2]), SDs[2])
diams <- c(min(abalone[,3]), max(abalone[,3]), mean(abalone[,3]), SDs[3])
heights <- c(min(abalone[,4]), max(abalone[,4]), mean(abalone[,4]), SDs[4])
wholes <- c(min(abalone[,5]), max(abalone[,5]), mean(abalone[,5]), SDs[5])
shucks <- c(min(abalone[,6]), max(abalone[,6]), mean(abalone[,6]), SDs[6])
viscersas <- c(min(abalone[,7]), max(abalone[,7]), mean(abalone[,7]), SDs[7])
shells <- c(min(abalone[,8]), max(abalone[,8]), mean(abalone[,8]), SDs[8])
rings <- c(min(abalone[,9]), max(abalone[,9]), mean(abalone[,9]), SDs[9])
data <- data.frame("Length" = lens, "Diam" = diams, "Height" = heights, "Whole" = wholes, "Shucked" = shucks, "Viscera" = viscersas, "Shell" = shells, "Rings" = rings, row_names = rows)
data
abalone[1:5,]
abalone[seq(from = 5, to = 50, by = 5),]
abalone[seq(from = length(abalone[[1]]), to = length(abalone[[1]]) - 5, by = -1),]
colnames(abalone)
height14 <- data.frame(abalone[abalone[["Height"]] < 0.14,])
dim(height14)
infant <- data.frame(abalone[abalone[["Sex"]] == 'I',])
dim(infant)
male_female <- data.frame(abalone[abalone[["Sex"]] == 'M' | abalone[["Sex"]] == 'F',])
dim(male_female)
data.frame(abalone[abalone[["Rings"]] > 25, c(1, 9)])
data.frame(abalone[abalone[["Sex"]] == 'I' & abalone[["Rings"]] > 3 & abalone[["Rings"]] < 6, c(1,3,9)])
abies <- abalone[abalone$Sex == 'I', c('Length', 'Height', 'Diameter', 'Whole', 'Shucked')]
abies$product <- abies$Whole * abies$Shucked
abies3 <- data.frame("log_height" = log(abies$Height), "log_length" = log(abies$Length))
filtered <- abalone[abalone[["Height"]] < 0.12,]
ordered <- filtered[order(filtered$Height, decreasing = FALSE),]
ordered2 <- abalone[order(abalone$Height, decreasing = TRUE),]
data.frame("Sex" = ordered2[1:5, 1], "Diameter" = ordered2[1:5, 3], "Rings" = ordered2[1:5, 9])
ordered3 <- abalone[order(abalone$Length, decreasing = TRUE),]
data.frame("Sex" = ordered3[1:5, 1], "Diameter" = ordered3[1:5, 3], "Rings" = ordered3[1:5, 9])
plot(abalone$Height)
# a) Scatter Plot
plot(abalone$Sex)
# b) Bar Plot
plot(abalone$Height, abalone$Length)
plot(data.frame("L" = lens, "H" = heights))
# c) Scatter Plot
plot(data.frame("L" = lens, "H" = heights, "D" = diams))
# d) Scatter Plot
plot(data.frame(abalone$Sex, abalone$Length))
# e) Scatter Plot Matrix
plot(data.frame(abalone$Length, abalone$Sex))
# f) Box Plot
plot(data.frame(abalone$Sex, abalone$Length))
# g) Scatter Plot
plot(data.frame(abalone$Length, abalone$Sex))
plot.default(abalone$Length, abalone$Height, pch = "*", xlab = "Length", ylab = "Height", main = "Length vs. Height")
a <- c(1,2,3,4,5,6,7,8,9)
a <- c(1,2,3,4,5,6,7,8,9,10,11,12)
a <- matrix(a, nrows=3, ncols=4)
a <- matrix(a, nrows=3, ncols=4)
a <- matrix(a, nrow=3, ncol=4)
A
a
a[1, 2]
a[2,3]
a <- list(c(1,2,3), c(2,3,4))
a
typeof(a)
typeof(a[1])
a[1]
a[[1]]
typeof(a[[1]])
a[[1]]
a[[2]]
typeof(a[[2]])
setwd("~/Dropbox/School/STAT133/hw-stat133/workout1/report")
shots_data <- read.csv(file="../data/shots-data.csv", stringsAsFactors = FALSE)
shots_data <- read.csv("../data/shots-data.csv", stringsAsFactors = FALSE)
shots_data
group_by(shots_data, name)
library(dplyr)
library(ggplot2)
shots_data <- read.csv("../data/shots-data.csv", stringsAsFactors = FALSE)
group_by(shots_data, name)
group_by(shots_data, name)
group_by(shots_data, shots_data$name)
s <- group_by(shots_data, shots_data$name)
s
s <- group_by(shots_data, name)
shots_data <- read.csv("../data/shots-data.csv")
s <- group_by(shots_data, name)
s
